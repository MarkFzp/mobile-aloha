{
    "summary": "The function initializes robot arms, sets operating modes, attempts to set a gripper current limit (disabled), and prepares for teleoperation with continuous joint sync and gripper control through the 'teleop' function.",
    "details": [
        {
            "comment": "This function initializes the robot by rebooting gripper motors, setting motor operating modes for all robots to position-based control, and attempts to set a current limit for one of the grippers (currently disabled due to TODO).",
            "location": "\"/media/root/Prima/works/mobile-aloha/docs/src/aloha_scripts/one_side_teleop.py\":0-17",
            "content": "import time\nimport sys\nimport IPython\ne = IPython.embed\nfrom interbotix_xs_modules.arm import InterbotixManipulatorXS\nfrom interbotix_xs_msgs.msg import JointSingleCommand\nfrom constants import MASTER2PUPPET_JOINT_FN, DT, START_ARM_POSE, MASTER_GRIPPER_JOINT_MID, PUPPET_GRIPPER_JOINT_CLOSE\nfrom robot_utils import torque_on, torque_off, move_arms, move_grippers, get_arm_gripper_positions\ndef prep_robots(master_bot, puppet_bot):\n    # reboot gripper motors, and set operating modes for all motors\n    puppet_bot.dxl.robot_reboot_motors(\"single\", \"gripper\", True)\n    puppet_bot.dxl.robot_set_operating_modes(\"group\", \"arm\", \"position\")\n    puppet_bot.dxl.robot_set_operating_modes(\"single\", \"gripper\", \"current_based_position\")\n    master_bot.dxl.robot_set_operating_modes(\"group\", \"arm\", \"position\")\n    master_bot.dxl.robot_set_operating_modes(\"single\", \"gripper\", \"position\")\n    # puppet_bot.dxl.robot_set_motor_registers(\"single\", \"gripper\", 'current_limit', 1000) # TODO(tonyzhaozh) figure out how to set this limit"
        },
        {
            "comment": "This code is initializing the robot arms and grippers to their starting positions, disabling torque for the gripper joint of the master robot, waiting for the gripper to close, and then turning off the torque. The function teleop seems to be related to teleoperation experimentation without data recording.",
            "location": "\"/media/root/Prima/works/mobile-aloha/docs/src/aloha_scripts/one_side_teleop.py\":18-46",
            "content": "    torque_on(puppet_bot)\n    torque_on(master_bot)\n    # move arms to starting position\n    start_arm_qpos = START_ARM_POSE[:6]\n    move_arms([master_bot, puppet_bot], [start_arm_qpos] * 2, move_time=1)\n    # move grippers to starting position\n    move_grippers([master_bot, puppet_bot], [MASTER_GRIPPER_JOINT_MID, PUPPET_GRIPPER_JOINT_CLOSE], move_time=0.5)\ndef press_to_start(master_bot):\n    # press gripper to start data collection\n    # disable torque for only gripper joint of master robot to allow user movement\n    master_bot.dxl.robot_torque_enable(\"single\", \"gripper\", False)\n    print(f'Close the gripper to start')\n    close_thresh = -1.4\n    pressed = False\n    while not pressed:\n        gripper_pos = get_arm_gripper_positions(master_bot)\n        if gripper_pos < close_thresh:\n            pressed = True\n        time.sleep(DT/10)\n    torque_off(master_bot)\n    print(f'Started!')\ndef teleop(robot_side):\n    \"\"\" A standalone function for experimenting with teleoperation. No data recording. \"\"\"\n    puppet_"
        },
        {
            "comment": "This code sets up two InterbotixManipulatorXS robots and initializes them with different names. It then prepares the robots for operation, starts a teleoperation loop where it continuously syncs joint positions between the master and puppet robots, and publishes gripper commands to control the gripper's position in tandem with the arm movements. The loop runs indefinitely until interrupted.",
            "location": "\"/media/root/Prima/works/mobile-aloha/docs/src/aloha_scripts/one_side_teleop.py\":46-67",
            "content": "bot = InterbotixManipulatorXS(robot_model=\"vx300s\", group_name=\"arm\", gripper_name=\"gripper\", robot_name=f'puppet_{robot_side}', init_node=True)\n    master_bot = InterbotixManipulatorXS(robot_model=\"wx250s\", group_name=\"arm\", gripper_name=\"gripper\", robot_name=f'master_{robot_side}', init_node=False)\n    prep_robots(master_bot, puppet_bot)\n    press_to_start(master_bot)\n    ### Teleoperation loop\n    gripper_command = JointSingleCommand(name=\"gripper\")\n    while True:\n        # sync joint positions\n        master_state_joints = master_bot.dxl.joint_states.position[:6]\n        puppet_bot.arm.set_joint_positions(master_state_joints, blocking=False)\n        # sync gripper positions\n        master_gripper_joint = master_bot.dxl.joint_states.position[6]\n        puppet_gripper_joint_target = MASTER2PUPPET_JOINT_FN(master_gripper_joint)\n        gripper_command.cmd = puppet_gripper_joint_target\n        puppet_bot.gripper.core.pub_single.publish(gripper_command)\n        # sleep DT\n        time.sleep(DT)\nif __name__=='__main__':"
        },
        {
            "comment": "These lines take a command-line argument, assign it to the 'side' variable, and then call the 'teleop' function with this argument.",
            "location": "\"/media/root/Prima/works/mobile-aloha/docs/src/aloha_scripts/one_side_teleop.py\":68-69",
            "content": "    side = sys.argv[1]\n    teleop(side)"
        }
    ]
}